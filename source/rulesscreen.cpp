#include "rulesscreen.h"
#include <QLabel>


QString rulesText = "В начале игры у каждого есть <b>2000$</b>, 2 обычных фабрики, 2 единицы сырья (ЕС) и 2 готовых продукции (ГП)."
                    "\nОбычные фабрики можно модернизировать за 600$ за 9 месяцев, причем 300$ оплачиваются сразу,"
                    " а 300$ после 9 месяцев, перед тем, как фабрика станет автоматической (пока фабрика модернизируется,"
                    " она работает как обычная фабрика).\nПриоритет(*) показывает на случайного игрока и влияет на то,"
                    " кому банк будет продавать/покупать на равных ставках.\nКаждый ход проходит так: Банк делает ставки"
                    ", по которым будет покупать ГП (максимальная стоимость и цена) и продавать ЕС (минимальная стоимость "
                    "и цена).\nТакже может произойти счастливый случай (1 из 4 вариантов):\n1) у одного из игроков"
                    " взрывается 1 фабрика\n2) у одного из игроков появляется 1 обычная фабрика\n3) один из игроков "
                    "выиграл в лотерею, он получает 200$\n4) у одного из игроков день рождения (все остальные дарят"
                    " некоторое количество ЕС, ГП, $)";
QString rulesText2 = "<p>В начале игры у каждого есть <b>2000$</b>, <b>2</b> обычных фабрики, "
                     "<b>2</b> единицы сырья (ЕС) и <b>2</b> готовых продукции (ГП).</p>"
                     "<p>Обычные фабрики можно модернизировать за <b>600$</b> за <b>9</b> месяцев, "
                     "причем <b>300$</b> оплачиваются сразу, а <b>300$</b> после <b>9</b> месяцев, "
                     "перед тем, как фабрика станет автоматической (пока фабрика модернизируется, "
                     "она работает как обычная фабрика).</p>"
                     "<p>Приоритет(*) показывает на случайного игрока и влияет на то, кому банк будет "
                     "продавать/покупать на равных ставках.</p>"
                     "<p>Каждый ход проходит так: Банк делает ставки, по которым будет покупать ГП "
                     "(максимальная стоимость и цена) и продавать ЕС (минимальная стоимость и цена).</p>"
                     "<p>Также может произойти счастливый случай (1 из 4 вариантов):</p>"
                     "<ul>"
                     "<li>у одного из игроков взрывается <b>1</b> фабрика</li>"
                     "<li>у одного из игроков появляется <b>1</b> обычная фабрика</li>"
                     "<li>один из игроков выиграл в лотерею, он получает <b>200$</b></li>"
                     "<li>у одного из игроков день рождения (все остальные дарят некоторое количество "
                     "ЕС, ГП, <b>$</b>)</li>"
                     "</ul>"
                     "<p><b>Каждый игрок по очереди делает свой ход</b>, в котором он указывает:</p>"

                     "<ul>"
                     "<li><b>сколько и по какой цене он может купить ЕС</b> </li>"
                     "<li><b>сколько и по какой цене он может продать ГП</b> </li>"
                     "<li><b>количество фабрик, которые он купит</b> — если у него меньше <b>10</b> фабрик, по <b>100$ за штуку</b></li>"
                     "<li><b>количество фабрик, которые он начнёт модернизировать</b> — сразу по <b>300$ за штуку</b></li>"
                     "<li><b>количество ЕС, которые будут переработаны в ГП на обычных фабриках</b> — по <b>20$/шт.</b>, до <b>2</b> шт. в месяц на 1 фабрику</li>"
                     "<li><b>количество ЕС, которые будут переработаны в ГП на автоматических фабриках</b> — по <b>8$/шт.</b>, до <b>4</b> шт. в месяц на 1 автоматическую фабрику</li>"
                     "<li><b>количество денег, которые он хочет взять в долг</b> в этом месяце — даётся на год под <b>10%</b></li>"
                     "<li><b>подарок</b> — если у кого-то день рождения</li>"
                     "</ul>"

                     "<p><b>Далее банк:</b></p>"

                     "<ul>"
                     "<li><b>собирает налоги</b>: <b>10$/ГП</b> и <b>2$/ЕС</b></li>"
                     "<li><b>налоги за фабрики каждый 12-й месяц</b>: <b>50$/Ф</b> (обычная фабрика) и <b>100$/АФ</b> (автоматическая)</li>"
                     "<li><b>покупает ГП и продаёт ЕС</b> по самым выгодным ставкам</li>"
                     "<li><b>собирает деньги за фабрики и кредиты</b>, которые нужно вернуть</li>"
                     "</ul>"

                     "<p>Если при этом кто-то не может заплатить то, что должен — он сразу проигрывает и выбывает из игры.</p>"

                     "<p><b>Далее приоритет (*) переходит к следующему игроку</b>, и если игра ещё не закончена (все не выбыли или не закончились месяцы), начинается новый ход.</p>"

                     "<p><b>Когда игра заканчивается</b>, подсчитываются деньги каждого игрока, и все его фабрики, ЕС и ГП также переводятся в деньги с такими коэффициентами:</p>"

                     "<ul>"
                     "<li><b>ЕС = 5$</b></li>"
                     "<li><b>ГП = 30$</b></li>"
                     "<li><b>обычная фабрика = 50$</b></li>"
                     "<li><b>автоматическая фабрика = 250$</b></li>"
                     "</ul>"

                     "<p>Если у игрока остались кредиты, они учитываются с коэффициентом <b>–1.1</b> (то есть отнимаются).</p>"
    ;
RulesScreen::RulesScreen(QWidget *parent)
    : QWidget{parent}
{
    mainLayout = new QVBoxLayout;

    backButton = new QPushButton("Назад");
    backButton->setStyleSheet(        "QPushButton {"
                              "    font-family: 'Courier New', monospace;"
                              "    font-size: 30px;"
                              "    font-weight: bold;"
                              "    color: #000000;"
                              "    background-color: transparent;"
                              "    border: none;"
                              "    padding: 15px 20px;"
                              "    text-align: center;"
                              "    min-height: 25px;"
                              "}"
                              "QPushButton:hover {"
                              "    color: #A1E0FF;"
                              "    background-color: #3A5562;"
                              "}"
                              "QPushButton:pressed {"
                              "    color: #ffffff;"
                              "    background-color: #07A2F0;"
                              "}");
    connect(backButton, &QPushButton::clicked, this, &RulesScreen::backButtonPressed);
    QLabel* rulesLabel = new QLabel;
    rulesLabel->setStyleSheet(
        "QLabel {"
        "    font-family: 'Courier New', monospace;"
        "    font-size: 22px;"
        "    font-weight: normal;"
        "    color: #111111;"
        "    background-color: transparent;"
        "    padding: 40px 20px 20px 20px;"
        "    letter-spacing: 0px;"
        "}"
        );
    rulesLabel->setText(rulesText2);
    rulesLabel->setTextFormat(Qt::RichText);
    rulesLabel->setWordWrap(true);

    mainLayout->addWidget(rulesLabel);
    mainLayout->addStretch();
    mainLayout->addWidget(backButton);

    setLayout(mainLayout);
}


void RulesScreen::backButtonPressed() {
    emit back();
}
